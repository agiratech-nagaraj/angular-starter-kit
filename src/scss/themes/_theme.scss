@use "mixins/responsive";

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap");

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$sahins-web-ui-primary: (
  50: #e1f1f7,
  100: #97cadb,
  200: #018abe,
  300: #4dadd2,
  400: #279cc8,
  500: #018abe,
  600: #0182b8,
  700: #0177af,
  800: #016da7,
  900: #001b48,
  A100: #c4e3ff,
  A200: #91cbff,
  A400: #5eb3ff,
  A700: #45a7ff,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);

$sahins-web-ui-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$sahins-web-ui-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$sahins-web-ui-theme: mat.define-light-theme(
  (
    color: (
      primary: $sahins-web-ui-primary,
      accent: $sahins-web-ui-accent,
      warn: $sahins-web-ui-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($sahins-web-ui-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

:root {
  --primary-navy: #001b48;
  --primary-dark: #02457a;
  --primary-light: #018abe;
  --primary-sky: #97cadb;
  --primary-light-sky: #d6ebee;
}

.primary {
  color: var(--primary-light);
}

.primary-bg {
  background: var(--primary-light);
  color: #fff;
}

html {
  font-size: 15px !important;
}

@include responsive.media-breakpoint(lg-lt) {
  html {
    font-size: 14px !important;
  }
}

@include responsive.media-breakpoint(md-lt) {
  html {
    font-size: 13px !important;
  }
}

@include responsive.media-breakpoint(sm-lt) {
  html {
    font-size: 12px !important;
  }
}

h1 {
  font-size: 2.25rem;
  line-height: 1.2;
  font-weight: bold;
  letter-spacing: 0.4px;
}

h2 {
  font-size: 1.5rem;
  line-height: 1.2;
  font-weight: bold;
}

h3 {
  // use heading equal to 20px
  font-size: 1.333rem;
  line-height: 1.2;
  font-weight: 500;
}

h4 {
  // use heading equal to 17px
  font-size: 1.133rem !important;
  line-height: 1.2 !important;
  font-weight: 500 !important;
}

p {
  font-size: 1rem;
  line-height: 1.5rem;
  text-align: justify;
  font-weight: 500;
}

.title {
  font-size: 1.33rem;
  font-weight: 500;
}

$sahins-typography: mat.define-typography-config(
  $font-family: "Poppins",
  // todo change font family into 'Poppins'
  $headline: mat.define-typography-level(1.333rem, 1.333rem, 500),
  $subheading-2: mat.define-typography-level(1.2rem, 1.5rem, 500),
  $title: mat.define-typography-level(1.133rem, 1.3rem, 500),
  $body-1: mat.define-typography-level(1rem, 1.3rem, 500),
);

@include mat.all-component-typographies($sahins-typography);
